{"version":3,"file":"button-text-card.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/fecha/src/fecha.js","../node_modules/custom-card-helpers/dist/index.m.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * Parse or format dates\n * @class fecha\n */\nvar fecha = {};\nvar token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigits = '\\\\d\\\\d?';\nvar threeDigits = '\\\\d{3}';\nvar fourDigits = '\\\\d{4}';\nvar word = '[^\\\\s]+';\nvar literal = /\\[([^]*?)\\]/gm;\nvar noop = function () {\n};\n\nfunction regexEscape(str) {\n  return str.replace( /[|\\\\{()[^$+*?.-]/g, '\\\\$&');\n}\n\nfunction shorten(arr, sLen) {\n  var newArr = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n  return newArr;\n}\n\nfunction monthUpdate(arrName) {\n  return function (d, v, i18n) {\n    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n    if (~index) {\n      d.month = index;\n    }\n  };\n}\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\nvar dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar monthNamesShort = shorten(monthNames, 3);\nvar dayNamesShort = shorten(dayNames, 3);\nfecha.i18n = {\n  dayNamesShort: dayNamesShort,\n  dayNames: dayNames,\n  monthNamesShort: monthNamesShort,\n  monthNames: monthNames,\n  amPm: ['am', 'pm'],\n  DoFn: function DoFn(D) {\n    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n  }\n};\n\nvar formatFlags = {\n  D: function(dateObj) {\n    return dateObj.getDate();\n  },\n  DD: function(dateObj) {\n    return pad(dateObj.getDate());\n  },\n  Do: function(dateObj, i18n) {\n    return i18n.DoFn(dateObj.getDate());\n  },\n  d: function(dateObj) {\n    return dateObj.getDay();\n  },\n  dd: function(dateObj) {\n    return pad(dateObj.getDay());\n  },\n  ddd: function(dateObj, i18n) {\n    return i18n.dayNamesShort[dateObj.getDay()];\n  },\n  dddd: function(dateObj, i18n) {\n    return i18n.dayNames[dateObj.getDay()];\n  },\n  M: function(dateObj) {\n    return dateObj.getMonth() + 1;\n  },\n  MM: function(dateObj) {\n    return pad(dateObj.getMonth() + 1);\n  },\n  MMM: function(dateObj, i18n) {\n    return i18n.monthNamesShort[dateObj.getMonth()];\n  },\n  MMMM: function(dateObj, i18n) {\n    return i18n.monthNames[dateObj.getMonth()];\n  },\n  YY: function(dateObj) {\n    return pad(String(dateObj.getFullYear()), 4).substr(2);\n  },\n  YYYY: function(dateObj) {\n    return pad(dateObj.getFullYear(), 4);\n  },\n  h: function(dateObj) {\n    return dateObj.getHours() % 12 || 12;\n  },\n  hh: function(dateObj) {\n    return pad(dateObj.getHours() % 12 || 12);\n  },\n  H: function(dateObj) {\n    return dateObj.getHours();\n  },\n  HH: function(dateObj) {\n    return pad(dateObj.getHours());\n  },\n  m: function(dateObj) {\n    return dateObj.getMinutes();\n  },\n  mm: function(dateObj) {\n    return pad(dateObj.getMinutes());\n  },\n  s: function(dateObj) {\n    return dateObj.getSeconds();\n  },\n  ss: function(dateObj) {\n    return pad(dateObj.getSeconds());\n  },\n  S: function(dateObj) {\n    return Math.round(dateObj.getMilliseconds() / 100);\n  },\n  SS: function(dateObj) {\n    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n  },\n  SSS: function(dateObj) {\n    return pad(dateObj.getMilliseconds(), 3);\n  },\n  a: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n  },\n  A: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n  },\n  ZZ: function(dateObj) {\n    var o = dateObj.getTimezoneOffset();\n    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n  }\n};\n\nvar parseFlags = {\n  D: [twoDigits, function (d, v) {\n    d.day = v;\n  }],\n  Do: [twoDigits + word, function (d, v) {\n    d.day = parseInt(v, 10);\n  }],\n  M: [twoDigits, function (d, v) {\n    d.month = v - 1;\n  }],\n  YY: [twoDigits, function (d, v) {\n    var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n    d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n  }],\n  h: [twoDigits, function (d, v) {\n    d.hour = v;\n  }],\n  m: [twoDigits, function (d, v) {\n    d.minute = v;\n  }],\n  s: [twoDigits, function (d, v) {\n    d.second = v;\n  }],\n  YYYY: [fourDigits, function (d, v) {\n    d.year = v;\n  }],\n  S: ['\\\\d', function (d, v) {\n    d.millisecond = v * 100;\n  }],\n  SS: ['\\\\d{2}', function (d, v) {\n    d.millisecond = v * 10;\n  }],\n  SSS: [threeDigits, function (d, v) {\n    d.millisecond = v;\n  }],\n  d: [twoDigits, noop],\n  ddd: [word, noop],\n  MMM: [word, monthUpdate('monthNamesShort')],\n  MMMM: [word, monthUpdate('monthNames')],\n  a: [word, function (d, v, i18n) {\n    var val = v.toLowerCase();\n    if (val === i18n.amPm[0]) {\n      d.isPm = false;\n    } else if (val === i18n.amPm[1]) {\n      d.isPm = true;\n    }\n  }],\n  ZZ: ['[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z', function (d, v) {\n    var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\n\n    if (parts) {\n      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n    }\n  }]\n};\nparseFlags.dd = parseFlags.d;\nparseFlags.dddd = parseFlags.ddd;\nparseFlags.DD = parseFlags.D;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a;\n\n\n// Some common format strings\nfecha.masks = {\n  default: 'ddd MMM DD YYYY HH:mm:ss',\n  shortDate: 'M/D/YY',\n  mediumDate: 'MMM D, YYYY',\n  longDate: 'MMMM D, YYYY',\n  fullDate: 'dddd, MMMM D, YYYY',\n  shortTime: 'HH:mm',\n  mediumTime: 'HH:mm:ss',\n  longTime: 'HH:mm:ss.SSS'\n};\n\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n */\nfecha.format = function (dateObj, mask, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof dateObj === 'number') {\n    dateObj = new Date(dateObj);\n  }\n\n  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n    throw new Error('Invalid Date in fecha.format');\n  }\n\n  mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n  var literals = [];\n\n  // Make literals inactive by replacing them with ??\n  mask = mask.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  // Apply formatting rules\n  mask = mask.replace(token, function ($0) {\n    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n  });\n  // Inline literal values back into the formatted value\n  return mask.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n};\n\n/**\n * Parse a date string into an object, changes - into /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @returns {Date|boolean}\n */\nfecha.parse = function (dateStr, format, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof format !== 'string') {\n    throw new Error('Invalid format in fecha.parse');\n  }\n\n  format = fecha.masks[format] || format;\n\n  // Avoid regular expression denial of service, fail early for really long strings\n  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n  if (dateStr.length > 1000) {\n    return null;\n  }\n\n  var dateInfo = {};\n  var parseInfo = [];\n  var literals = [];\n  format = format.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  var newFormat = regexEscape(format).replace(token, function ($0) {\n    if (parseFlags[$0]) {\n      var info = parseFlags[$0];\n      parseInfo.push(info[1]);\n      return '(' + info[0] + ')';\n    }\n\n    return $0;\n  });\n  newFormat = newFormat.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n  var matches = dateStr.match(new RegExp(newFormat, 'i'));\n  if (!matches) {\n    return null;\n  }\n\n  for (var i = 1; i < matches.length; i++) {\n    parseInfo[i - 1](dateInfo, matches[i], i18n);\n  }\n\n  var today = new Date();\n  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  var date;\n  if (dateInfo.timezoneOffset != null) {\n    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n  } else {\n    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n  }\n  return date;\n};\n\nexport default fecha;\n","import e from\"fecha\";function t(e){var t=e.split(\":\").map(Number);return 3600*t[0]+60*t[1]+t[2]}var a=function(){try{(new Date).toLocaleDateString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleDateString(t,{year:\"numeric\",month:\"long\",day:\"numeric\"})}:function(t){return e.format(t,\"mediumDate\")},n=function(){try{(new Date).toLocaleString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleString(t,{year:\"numeric\",month:\"long\",day:\"numeric\",hour:\"numeric\",minute:\"2-digit\"})}:function(t){return e.format(t,\"haDateTime\")},r=function(){try{(new Date).toLocaleTimeString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleTimeString(t,{hour:\"numeric\",minute:\"2-digit\"})}:function(t){return e.format(t,\"shortTime\")},i=[60,60,24,7],o=[\"second\",\"minute\",\"hour\",\"day\"];function s(e,t,a){void 0===a&&(a={});var n,r=((a.compareTime||new Date).getTime()-e.getTime())/1e3,s=r>=0?\"past\":\"future\";r=Math.abs(r);for(var c=0;c<i.length;c++){if(r<i[c]){r=Math.floor(r),n=t(\"ui.components.relative_time.duration.\"+o[c],\"count\",r);break}r/=i[c]}return void 0===n&&(n=t(\"ui.components.relative_time.duration.week\",\"count\",r=Math.floor(r))),!1===a.includeTense?n:t(\"ui.components.relative_time.\"+s,\"time\",n)}var c=function(e){return e<10?\"0\"+e:e};function u(e){var t=Math.floor(e/3600),a=Math.floor(e%3600/60),n=Math.floor(e%3600%60);return t>0?t+\":\"+c(a)+\":\"+c(n):a>0?a+\":\"+c(n):n>0?\"\"+n:null}function l(e){var a=t(e.attributes.remaining);if(\"active\"===e.state){var n=(new Date).getTime(),r=new Date(e.last_changed).getTime();a=Math.max(a-(n-r)/1e3,0)}return a}var m=function(e,t,a,n){void 0===n&&(n=!1),e._themes||(e._themes={});var r=t.default_theme;(\"default\"===a||a&&t.themes[a])&&(r=a);var i=Object.assign({},e._themes);if(\"default\"!==r){var o=t.themes[r];Object.keys(o).forEach(function(t){var a=\"--\"+t;e._themes[a]=\"\",i[a]=o[t]})}if(e.updateStyles?e.updateStyles(i):window.ShadyCSS&&window.ShadyCSS.styleSubtree(e,i),n){var s=document.querySelector(\"meta[name=theme-color]\");if(s){s.hasAttribute(\"default-content\")||s.setAttribute(\"default-content\",s.getAttribute(\"content\"));var c=i[\"--primary-color\"]||s.getAttribute(\"default-content\");s.setAttribute(\"content\",c)}}},h=function(e){return\"function\"==typeof e.getCardSize?e.getCardSize():1};function f(e){return e.substr(0,e.indexOf(\".\"))}function d(e){return e.substr(e.indexOf(\".\")+1)}var p=function(e){return e.substr(e.indexOf(\".\")+1)};function v(e){var t=e.language||\"en\";return e.translationMetadata.translations[t]&&e.translationMetadata.translations[t].isRTL||!1}function _(e){return v(e)?\"rtl\":\"ltr\"}function g(e){return f(e.entity_id)}function b(e,t,i){var o,s=g(t);if(\"binary_sensor\"===s)t.attributes.device_class&&(o=e(\"state.\"+s+\".\"+t.attributes.device_class+\".\"+t.state)),o||(o=e(\"state.\"+s+\".default.\"+t.state));else if(t.attributes.unit_of_measurement&&![\"unknown\",\"unavailable\"].includes(t.state))o=t.state+\" \"+t.attributes.unit_of_measurement;else if(\"input_datetime\"===s){var c;if(t.attributes.has_time)if(t.attributes.has_date)c=new Date(t.attributes.year,t.attributes.month-1,t.attributes.day,t.attributes.hour,t.attributes.minute),o=n(c,i);else{var u=new Date;c=new Date(u.getFullYear(),u.getMonth(),u.getDay(),t.attributes.hour,t.attributes.minute),o=r(c,i)}else c=new Date(t.attributes.year,t.attributes.month-1,t.attributes.day),o=a(c,i)}else o=\"zwave\"===s?[\"initializing\",\"dead\"].includes(t.state)?e(\"state.zwave.query_stage.\"+t.state,\"query_stage\",t.attributes.query_stage):e(\"state.zwave.default.\"+t.state):e(\"state.\"+s+\".\"+t.state);return o||(o=e(\"state.default.\"+t.state)||e(\"component.\"+s+\".state.\"+t.state)||t.state),o}var y=function(e){return void 0===e.attributes.friendly_name?p(e.entity_id).replace(/_/g,\" \"):e.attributes.friendly_name||\"\"},w=\"hass:bookmark\",k=\"lovelace\",S=[\"climate\",\"cover\",\"configurator\",\"input_select\",\"input_number\",\"input_text\",\"lock\",\"media_player\",\"scene\",\"script\",\"timer\",\"vacuum\",\"water_heater\",\"weblink\"],x=[\"alarm_control_panel\",\"automation\",\"camera\",\"climate\",\"configurator\",\"cover\",\"fan\",\"group\",\"history_graph\",\"input_datetime\",\"light\",\"lock\",\"media_player\",\"script\",\"sun\",\"updater\",\"vacuum\",\"water_heater\",\"weather\"],D=[\"input_number\",\"input_select\",\"input_text\",\"scene\",\"weblink\"],T=[\"camera\",\"configurator\",\"history_graph\",\"scene\"],E=[\"closed\",\"locked\",\"off\"],M=new Set([\"fan\",\"input_boolean\",\"light\",\"switch\",\"group\",\"automation\"]),q=\"°C\",z=\"°F\",R=\"group.default_view\",A=function(e,t,a,n){n=n||{},a=null==a?{}:a;var r=new Event(t,{bubbles:void 0===n.bubbles||n.bubbles,cancelable:Boolean(n.cancelable),composed:void 0===n.composed||n.composed});return r.detail=a,e.dispatchEvent(r),r},C=new Set([\"call-service\",\"divider\",\"section\",\"weblink\",\"cast\",\"select\"]),L={alert:\"toggle\",automation:\"toggle\",climate:\"climate\",cover:\"cover\",fan:\"toggle\",group:\"group\",input_boolean:\"toggle\",input_number:\"input-number\",input_select:\"input-select\",input_text:\"input-text\",light:\"toggle\",lock:\"lock\",media_player:\"media-player\",remote:\"toggle\",scene:\"scene\",script:\"script\",sensor:\"sensor\",timer:\"timer\",switch:\"toggle\",vacuum:\"toggle\",water_heater:\"climate\",input_datetime:\"input-datetime\"},O=function(e,t){void 0===t&&(t=!1);var a=function(e,t){return n(\"hui-error-card\",{type:\"error\",error:e,config:t})},n=function(e,t){var n=window.document.createElement(e);try{n.setConfig(t)}catch(n){return console.error(e,n),a(n.message,t)}return n};if(!e||\"object\"!=typeof e||!t&&!e.type)return a(\"No type defined\",e);var r=e.type;if(r&&r.startsWith(\"custom:\"))r=r.substr(\"custom:\".length);else if(t)if(C.has(r))r=\"hui-\"+r+\"-row\";else{if(!e.entity)return a(\"Invalid config given.\",e);var i=e.entity.split(\".\",1)[0];r=\"hui-\"+(L[i]||\"text\")+\"-entity-row\"}else r=\"hui-\"+r+\"-card\";if(customElements.get(r))return n(r,e);var o=a(\"Custom element doesn't exist: \"+e.type+\".\",e);o.style.display=\"None\";var s=setTimeout(function(){o.style.display=\"\"},2e3);return customElements.whenDefined(e.type).then(function(){clearTimeout(s),A(o,\"ll-rebuild\",{},o)}),o},j={alert:\"hass:alert\",automation:\"hass:playlist-play\",calendar:\"hass:calendar\",camera:\"hass:video\",climate:\"hass:thermostat\",configurator:\"hass:settings\",conversation:\"hass:text-to-speech\",device_tracker:\"hass:account\",fan:\"hass:fan\",group:\"hass:google-circles-communities\",history_graph:\"hass:chart-line\",homeassistant:\"hass:home-assistant\",homekit:\"hass:home-automation\",image_processing:\"hass:image-filter-frames\",input_boolean:\"hass:drawing\",input_datetime:\"hass:calendar-clock\",input_number:\"hass:ray-vertex\",input_select:\"hass:format-list-bulleted\",input_text:\"hass:textbox\",light:\"hass:lightbulb\",mailbox:\"hass:mailbox\",notify:\"hass:comment-alert\",person:\"hass:account\",plant:\"hass:flower\",proximity:\"hass:apple-safari\",remote:\"hass:remote\",scene:\"hass:google-pages\",script:\"hass:file-document\",sensor:\"hass:eye\",simple_alarm:\"hass:bell\",sun:\"hass:white-balance-sunny\",switch:\"hass:flash\",timer:\"hass:timer\",updater:\"hass:cloud-upload\",vacuum:\"hass:robot-vacuum\",water_heater:\"hass:thermometer\",weblink:\"hass:open-in-new\"};function I(e,t){if(e in j)return j[e];switch(e){case\"alarm_control_panel\":switch(t){case\"armed_home\":return\"hass:bell-plus\";case\"armed_night\":return\"hass:bell-sleep\";case\"disarmed\":return\"hass:bell-outline\";case\"triggered\":return\"hass:bell-ring\";default:return\"hass:bell\"}case\"binary_sensor\":return t&&\"off\"===t?\"hass:radiobox-blank\":\"hass:checkbox-marked-circle\";case\"cover\":return\"closed\"===t?\"hass:window-closed\":\"hass:window-open\";case\"lock\":return t&&\"unlocked\"===t?\"hass:lock-open\":\"hass:lock\";case\"media_player\":return t&&\"off\"!==t&&\"idle\"!==t?\"hass:cast-connected\":\"hass:cast\";case\"zwave\":switch(t){case\"dead\":return\"hass:emoticon-dead\";case\"sleeping\":return\"hass:sleep\";case\"initializing\":return\"hass:timer-sand\";default:return\"hass:z-wave\"}default:return console.warn(\"Unable to find icon for domain \"+e+\" (\"+t+\")\"),w}}var N=function(e,t){var a=t.value||t,n=t.attribute?e.attributes[t.attribute]:e.state;switch(t.operator||\"==\"){case\"==\":return n===a;case\"<=\":return n<=a;case\"<\":return n<a;case\">=\":return n>=a;case\">\":return n>a;case\"!=\":return n!==a;case\"regex\":return n.match(a);default:return!1}},F=function(e){A(window,\"haptic\",e)},B=function(e,t,a){void 0===a&&(a=!1),a?history.replaceState(null,\"\",t):history.pushState(null,\"\",t),A(window,\"location-changed\",{replace:a})},U=function(e,t,a){void 0===a&&(a=!0);var n,r=f(t),i=\"group\"===r?\"homeassistant\":r;switch(r){case\"lock\":n=a?\"unlock\":\"lock\";break;case\"cover\":n=a?\"open_cover\":\"close_cover\";break;default:n=a?\"turn_on\":\"turn_off\"}return e.callService(i,n,{entity_id:t})},V=function(e,t){var a=E.includes(e.states[t].state);return U(e,t,a)},W=function(e,t,a,n){var r;if(\"double_tap\"===n&&a.double_tap_action?r=a.double_tap_action:\"hold\"===n&&a.hold_action?r=a.hold_action:\"tap\"===n&&a.tap_action&&(r=a.tap_action),r||(r={action:\"more-info\"}),!r.confirmation||r.confirmation.exemptions&&r.confirmation.exemptions.some(function(e){return e.user===t.user.id})||(F(\"warning\"),confirm(r.confirmation.text||\"Are you sure you want to \"+r.action+\"?\")))switch(r.action){case\"more-info\":(a.entity||a.camera_image)&&A(e,\"hass-more-info\",{entityId:a.entity?a.entity:a.camera_image});break;case\"navigate\":r.navigation_path&&B(0,r.navigation_path);break;case\"url\":r.url_path&&window.open(r.url_path);break;case\"toggle\":a.entity&&(V(t,a.entity),F(\"success\"));break;case\"call-service\":if(!r.service)return void F(\"failure\");var i=r.service.split(\".\",2);t.callService(i[0],i[1],r.service_data),F(\"success\")}},Y=function(e,t,a,n,r){var i;if(r&&a.double_tap_action?i=a.double_tap_action:n&&a.hold_action?i=a.hold_action:!n&&a.tap_action&&(i=a.tap_action),i||(i={action:\"more-info\"}),!i.confirmation||i.confirmation.exemptions&&i.confirmation.exemptions.some(function(e){return e.user===t.user.id})||confirm(i.confirmation.text||\"Are you sure you want to \"+i.action+\"?\"))switch(i.action){case\"more-info\":(a.entity||a.camera_image)&&(A(e,\"hass-more-info\",{entityId:i.entity?i.entity:a.entity?a.entity:a.camera_image}),i.haptic&&F(i.haptic));break;case\"navigate\":i.navigation_path&&(B(0,i.navigation_path),i.haptic&&F(i.haptic));break;case\"url\":i.url_path&&window.open(i.url_path),i.haptic&&F(i.haptic);break;case\"toggle\":a.entity&&(V(t,a.entity),i.haptic&&F(i.haptic));break;case\"call-service\":if(!i.service)return;var o=i.service.split(\".\",2),s=o[0],c=o[1],u=Object.assign({},i.service_data);\"entity\"===u.entity_id&&(u.entity_id=a.entity),t.callService(s,c,u),i.haptic&&F(i.haptic)}};function G(e){return void 0!==e&&\"none\"!==e.action}function H(e,t,a){if(t.has(\"config\")||a)return!0;if(e._config.entity){var n=t.get(\"hass\");return!n||n.states[e._config.entity]!==e.hass.states[e._config.entity]}return!1}function J(e){return void 0!==e&&\"none\"!==e.action}var K=function(e,t,a){void 0===a&&(a=!0);var n={};t.forEach(function(t){if(E.includes(e.states[t].state)===a){var r=f(t),i=[\"cover\",\"lock\"].includes(r)?r:\"homeassistant\";i in n||(n[i]=[]),n[i].push(t)}}),Object.keys(n).forEach(function(t){var r;switch(t){case\"lock\":r=a?\"unlock\":\"lock\";break;case\"cover\":r=a?\"open_cover\":\"close_cover\";break;default:r=a?\"turn_on\":\"turn_off\"}e.callService(t,r,{entity_id:n[t]})})},P=function(){var e=document.querySelector(\"home-assistant\");if(e=(e=(e=(e=(e=(e=(e=(e=e&&e.shadowRoot)&&e.querySelector(\"home-assistant-main\"))&&e.shadowRoot)&&e.querySelector(\"app-drawer-layout partial-panel-resolver\"))&&e.shadowRoot||e)&&e.querySelector(\"ha-panel-lovelace\"))&&e.shadowRoot)&&e.querySelector(\"hui-root\")){var t=e.lovelace;return t.current_view=e.___curView,t}return null};export{t as durationToSeconds,a as formatDate,n as formatDateTime,r as formatTime,s as relativeTime,u as secondsToDuration,l as timerTimeRemaining,m as applyThemesOnElement,h as computeCardSize,f as computeDomain,d as computeEntity,p as computeObjectId,v as computeRTL,_ as computeRTLDirection,b as computeStateDisplay,g as computeStateDomain,y as computeStateName,w as DEFAULT_DOMAIN_ICON,k as DEFAULT_PANEL,S as DOMAINS_WITH_CARD,x as DOMAINS_WITH_MORE_INFO,D as DOMAINS_HIDE_MORE_INFO,T as DOMAINS_MORE_INFO_NO_HISTORY,E as STATES_OFF,M as DOMAINS_TOGGLE,q as UNIT_C,z as UNIT_F,R as DEFAULT_VIEW_ENTITY_ID,O as createThing,j as fixedIcons,I as domainIcon,N as evaluateFilter,A as fireEvent,W as handleAction,Y as handleClick,F as forwardHaptic,G as hasAction,H as hasConfigOrEntityChanged,J as hasDoubleClick,B as navigate,V as toggleEntity,K as turnOnOffEntities,U as turnOnOffEntity,P as getLovelace};\n//# sourceMappingURL=index.m.js.map\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","_options","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","standardProperty","kind","assign","clazz","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","_styles","addStyles","reduceRight","unshift","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","litRender","delete","fecha","token","word","literal","noop","shorten","arr","sLen","newArr","len","monthUpdate","arrName","i18n","charAt","toUpperCase","month","pad","val","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","getSeconds","ss","S","round","getMilliseconds","SS","SSS","a","A","ZZ","getTimezoneOffset","floor","abs","parseFlags","day","parseInt","cent","Date","year","hour","minute","second","millisecond","isPm","minutes","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","toString","isNaN","getTime","literals","replace","$0","$1","shift","dateStr","dateInfo","parseInfo","newFormat","info","matches","date","today","UTC","toLocaleDateString","toLocaleString","toLocaleTimeString","E","Event","bubbles","cancelable","composed","detail","dispatchEvent","F","W","double_tap_action","hold_action","tap_action","action","confirmation","exemptions","some","user","id","confirm","entity","camera_image","entityId","navigation_path","history","replaceState","pushState","B","url_path","open","f","callService","entity_id","U","includes","states","state","V","service","service_data","G","args","_config","hass","classOrDescriptor","define","legacyCustomElement","elements","standardCustomElement"],"mappings":"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"}